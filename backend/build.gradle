plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.a504'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// JWT
	implementation 'com.auth0:java-jwt:3.10.3'
}

// Querydsl Q Class 생성 위치
def querydslDir = '/src/main/generated/'

// Querydsl Q Class 생성 위치 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// java source set 에 Querydsl Q Class 위치 추가
sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

// gradle clean 시, Q Class 디렉토리까지 삭제하도록 설정
clean {
	delete file(querydslDir)
}

// RestDocs
ext {
	set('snippetsDir', "build/generated-snippets")
}

tasks.register('deleteOldDoc') {
	doFirst {
		println("deleteOldDoc")
		delete 'src/main/resources/static/docs/index.html'
	}
}

tasks.named('test') {
	dependsOn deleteOldDoc
	outputs.dir snippetsDir
	println("test")
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	dependsOn test
	println("asciidoctor")
	inputs.dir snippetsDir
}
//
//bootJar {
//	dependsOn asciidoctor
//	copy {
//		from "${asciidoctor.outputDir}"
////		into "BOOT-INF/classes/static/docs" //???
//		into "src/main/resources/static/docs"
//	}
//}

tasks.register('copyDocument') {
	dependsOn asciidoctor
	doLast {
		copy {
			println("copyDocument")
			from "${asciidoctor.outputDir}"
			into "src/main/resources/static/docs"
		}
	}
}

build {
	dependsOn copyDocument
}
